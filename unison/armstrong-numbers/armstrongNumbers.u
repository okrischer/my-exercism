armstrongNumbers.isArmstrongNumber : Nat -> Boolean
armstrongNumbers.isArmstrongNumber number =

  toDigits : Nat -> [Nat]
  toDigits = cases
    n | n < 10 -> [n]
    n -> toDigits (n / 10) :+ (mod n 10)

  digits = toDigits number
  sum = List.foldLeft (acc d -> acc + Nat.pow d (size digits)) 0 digits
  sum == number
