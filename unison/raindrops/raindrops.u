raindrops.convert : Nat -> Text
raindrops.convert n =
    factors = [(3, "Pling"), (5, "Plang"), (7, "Plong")]
    isSound = cases (factor, sound) ->
        if mod n factor == 0 then Some sound else None
    
    sounds = filterMap isSound factors
    match sounds with
        [] -> Nat.toText n
        s  -> List.foldLeft (++) "" s

---- Anything below this line is ignored by Unison.

raindrops.convert : Nat -> Text
raindrops.convert n =
    factorize = cases
        n | mod n 3 == 0 ->  factorize (n / 3) :+ "Pling"
        n | mod n 5 == 0 ->  factorize (n / 5) :+ "Plang"
        n | mod n 7 == 0 ->  factorize (n / 7) :+ "Plong"
        n -> []
    sounds = factorize n |> distinct |> reverse
    if List.isEmpty sounds then Nat.toText n else Text.join "" sounds
